[project]
name = "minimal-python-project"
version = "0.1.0"
description = "A minimal Python project template"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
dependencies = [
    "pydantic>=2.0.0",
    "httpx>=0.27.0", 
    "rich>=13.0.0",
    "typer>=0.12.0"
]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
    "ruff>=0.1.0",
    "black>=23.0",
    "mypy>=1.0",
    "vulture>=2.0",
    "safety>=2.0",
    "bandit>=1.7",
    "pre-commit>=3.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/your_package"]

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [".git", ".ruff_cache", ".venv", ".vscode"]

[tool.ruff.lint]
preview = true
select = [
    "ANN",  # type annotation
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "RUF",  # ruff specific rules
    "W",    # pycodestyle warnings
]
ignore = [
    "F401",  # unused import
    "F841",  # unused variable
]
unfixable = ["F401", "F841"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["ANN"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.black]
line-length = 100
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=term-missing --cov-report=html"

[tool.vulture]
min_confidence = 60
paths = ["src"]

[tool.bandit]
exclude_dirs = ["tests"]